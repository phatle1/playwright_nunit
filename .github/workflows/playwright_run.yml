name: Playwright Tests
on:
  push:
    branches: [ "Master" ]
  pull_request:
    branches: [ "Master" ]
jobs:
  test:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    
    - name: Install rsync and refresh environment
      shell: powershell
      run: |
        choco install rsync -y
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        refreshenv
        
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Build & Install
      run: dotnet build --configuration Debug

      # Step 7: Install Allure Commandline
    - name: Install Allure CLI
      run: npm install -g allure-commandline --save-dev
      
    - name: install browsers
      run: pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps

    
    - name: Run tests
      run: |
        mkdir allure-results
        dotnet test --settings e2e.runsettings  --logger "trx;LogFileName=allure-report.trx" --results-directory "allure-results"
      continue-on-error: true
    
    - name: Install scoop (Windows)
      uses: MinoruSekine/setup-scoop@v4.0.1
      if: steps.restore_cache.outputs.cache-hit != 'true'
      with:
        install_scoop: 'true'
        buckets: extras
        apps: ${{ env.packages_to_install }}
        scoop_update: 'true'
        update_path: 'true'

    # Step 6: Install Allure
    - name: Download Allure CLI
      run: scoop install allure

    

   # Step 7: Generate Allure Results
    - name: Generate Allure Results
      run: |
        if (Test-Path -Path "gh-pages\allure-report\history") {
          Copy-Item -Path "gh-pages\allure-report\history" -Destination "allure-results\history" -Recurse -Force
        }
        allure generate ./allure-results -o ./allure-report

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: allure-report
        branch: gh-pages
        clean: true
        
    # - name: Load test report history
    #   uses: actions/checkout@v3
    #   if: always()
    #   continue-on-error: true
    #   with:
    #     ref: gh-pages
    #     path: gh-pages
        
    # # Step 8: Upload Allure History
    # - name: Upload Allure History
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: allure-history
    #     path: allure-results/history

    # - name: Publish test report
    #   uses: peaceiris/actions-gh-pages@v3
    #   if: always()
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_branch: gh-pages
    #     publish_dir: allure-history
    #     keep_files: true
