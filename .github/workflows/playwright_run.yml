name: Playwright Tests
on:
  push:
    branches: [ "Master" ]
  pull_request:
    branches: [ "Master" ]
jobs:
  test:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    
    - name: Install rsync and refresh environment
      shell: powershell
      run: |
        choco install rsync -y
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        refreshenv
        
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Build & Install
      run: dotnet build --configuration Debug

      # Step 7: Install Allure Commandline
    - name: Install Allure CLI
      run: npm install -g allure-commandline --save-dev
      
    - name: install browsers
      run: pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps

   

    
    - name: Run tests
      run: |
        mkdir allure-results
        dotnet test --settings e2e.runsettings  --logger "trx;LogFileName=allure-report.trx" --results-directory "allure-results"
      continue-on-error: true
    
    - name: Install scoop (Windows)
      uses: MinoruSekine/setup-scoop@v4.0.1
      if: steps.restore_cache.outputs.cache-hit != 'true'
      with:
        install_scoop: 'true'
        buckets: extras
        apps: ${{ env.packages_to_install }}
        scoop_update: 'true'
        update_path: 'true'

    # Step 6: Install Allure
    - name: Download Allure CLI
      run: scoop install allure

      
    - name: Get Allure history.
      uses: actions/checkout@v2
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages
        
    - name: Deploy Allure Report to GitHub Pages
      if: always()
      uses: actions/github-pages@v3
      with:
        branch: gh-pages
        folder: allure-history  # Folder containing your Allure report
      env:
        PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
    

   # Step 7: Generate Allure Results
    # - name: Generate Allure Results
    #   run: |
    #     if (Test-Path -Path "gh-pages\allure-report\history") {
    #       Copy-Item -Path "gh-pages\allure-report\history" -Destination "allure-results\history" -Recurse -Force
    #     }
    #     allure generate ./allure-results -o ./allure-report

    # - name: Deploy Allure Report
    #   env:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #   run: |
    #     cp -r allure-report/history gh-pages/allure-report/
    #     cp -r allure-report/* gh-pages/allure-report/
    #     cd gh-pages
    #     git add --all
    #     git commit -m "Update Allure Report with history - $(date)" || echo "No changes to commit"
    #     git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages
        
