name: Playwright Tests
on:
  push:
    branches: [ "Master" ]
  pull_request:
    branches: [ "Master" ]

# Define the jobs for the workflow
jobs:
  allure-report:
    # Specify the environment for the runner
    runs-on: ubuntu-latest

    # Define the steps for the job
    steps:
    # Step 1: Check out the repository code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up .NET Core SDK required for NUnit and Playwright
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Step 3: Install Playwright dependencies (required for browser testing)
    - name: Install Playwright Dependencies
      run: |
        npx playwright install-deps

    # Step 4: Restore and build the NUnit project
    - name: Build NUnit Project
      run: |
        dotnet restore
        dotnet build --configuration Debug
    
     # Step 4.1: Install browser
    - name: install browsers
      run: pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps

    # Step 5: Run NUnit tests and generate Allure results
    - name: Run NUnit Tests
      run: |
        # Run tests with NUnit and output results in Allure format
        dotnet test --settings e2e.runsettings  --test-adapter-path:. -- TestResultsDirectory=allure-results

    # Step 6: Install Allure command-line tool for generating the report
    - name: Install Allure CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y curl unzip
        curl -sLo allure.tgz https://github.com/allure-framework/allure2/releases/download/2.23.0/allure-2.23.0.tgz
        tar -xzf allure.tgz
        sudo mv allure-2.23.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/bin/allure

    # Step 7: Generate Allure report
    - name: Generate Allure Report
      run: |
        # Generate static HTML report from Allure results
        allure generate allure-results --clean -o allure-report

    # Step 8: Deploy Allure report to gh-pages branch
    - name: Deploy Allure Report to gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        # Clone the gh-pages branch
        git clone --depth 1 --branch gh-pages https://github.com/${{ github.repository }} gh-pages

        # Copy the generated report into the gh-pages branch
        mkdir -p gh-pages/allure-report
        cp -R allure-report/* gh-pages/allure-report

        # Commit and push changes to the gh-pages branch
        cd gh-pages
        git add --all
        git commit -m "Update Allure Report - $(date)" || echo "No changes to commit"
        git push origin gh-pages
